{"version":3,"sources":["assets/datafiles/two-dtsne.csv","assets/datafiles/tsne-three-dim.csv","assets/datafiles/ndp_predictions.csv","assets/datafiles/highlevel/compiled-highlevel2.csv","assets/datafiles/lowlevel/low-level-normalized.csv","assets/datafiles/lowlevel/lowlevel-combined-withoutStats.csv","assets/datafiles/highlevel/high-level2-normalized.csv","widgets/Navbar.js","widgets/ViewClasses.js","widgets/ViewFeatureNormalDist.js","widgets/ViewScatterPlot.js","widgets/BoxPlotView.js","widgets/PlotlyTest.js","widgets/CustomAudioPlayer.js","widgets/SongTrend.js","widgets/TsneTrend.js","App.js","serviceWorker.js","index.js"],"names":["React","Component","ViewClasses","props","state","chinese","malay","hindi","tamil","obj","this","data","vals","Object","keys","map","a","class","filter","Boolean","length","drawGraph","ctx","document","getElementById","Chart","type","devicePixelRatio","labels","datasets","label","backgroundColor","borderColor","borderWidth","options","responsive","title","display","text","scales","yAxes","ticks","beginAtZero","className","id","width","height","ViewScatterPlot","d","i","maximum","ind","classes","cssClass","svg","d3","append","attr","startX","endX","labelScale","yScale","domain","range","key","group","values","g","xScale","padding","xAxis","yAxis","selectAll","enter","bandwidth","on","el","nextElementSibling","classed","scaleHeight","call","features","classA","classB","classC","classD","forEach","feature","name","split","pop","value","s","formHistogram","prevProps","remove","organizeData","console","log","BoxPlotView","arr","concat","featureName","Number","max","Promise","resolve","reject","lowest","highest","tmpObj","q1","sort","median","q3","interQuantileRange","min","push","margin","featureheightRange","getData","then","res","x","paddingInner","paddingOuter","y","style","boxWidth","Math","abs","loading","spin","PlotlyTest","z","classs","colors","selectClass","ndp","selections","selectedInd","dat","indexOf","setState","e","val","target","checked","updateClassSelection","Row","Col","md","onClick","onClickPoint","bind","mode","marker","color","size","layout","hovermode","Form","onChange","selectBox","Group","Check","CustomAudioPlayer","playing","duration","progress","start","progressData","playedSeconds","ytid","activeIcon","onProgress","updateProgress","onDuration","url","controls","config","file","xs","togglePlaying","Control","onChangeProgress","Ethnicity","fillColor","fill","hoveron","fillcolor","Array","opacity","line","SongTrend","names","ytId","selectedSong","selectedSongName","points","index","pointIndex","textposition","textfont","family","sizemode","sizeref","TsneTrend","sliderSteps","frames","toPlot","years","method","args","transition","frame","redraw","ndpSongs","song","result","autosize","updatemenus","yanchor","xanchor","showactive","direction","pad","t","r","buttons","fromcurrent","sliders","l","currentvalue","visible","prefix","font","steps","twodtsne","require","tsneData","compiledHighlevel","compiledLowlevelNormalized","compiledLowLevel","compiledHighLevelNormalized","App","loadingData","viewClasses","viewFeatureGraph","viewScatter","featureInd","linedata","viewBoxPlot","files","selectFile","viewPlotly","viewTrends","viewTsneTrend","navClick","fileinfo","cat","mapFeature","columns","propertyNest","Class","rollup","v","entries","includes","match","selectedFile","resetData","Button","variant","getComponent","window","location","hostname","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fc04e04f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/two-dtsne.da08b35b.csv\";","export default __webpack_public_path__ + \"static/media/tsne-three-dim.6780ec52.csv\";","export default __webpack_public_path__ + \"static/media/ndp_predictions.e288a39e.csv\";","export default __webpack_public_path__ + \"static/media/compiled-highlevel2.11c11be3.csv\";","export default __webpack_public_path__ + \"static/media/low-level-normalized.6259f821.csv\";","export default __webpack_public_path__ + \"static/media/lowlevel-combined-withoutStats.77cee7ae.csv\";","export default __webpack_public_path__ + \"static/media/high-level2-normalized.4f4cef0c.csv\";","import React from 'react';\nimport {Navbar,Form,NavDropdown,Nav,FormControl,Button} from 'react-bootstrap';\n\n\nclass NavBar extends React.Component {\n\n  constructor(props) {\n      super(props);\n  }\n\n  componentDidMount() {\n\n  }\n\n  selectFeature(e){\n    console.log(e.target.value);\n    this.props.selectFeature(e.target.value)\n  }\n\n  getFeatures(){\n\n    let listitems = {};\n    listitems = this.props.features.map((feature,index)=>\n    <option key={index} value={index} >{ index ==0? 'Select a feature':feature}</option>\n\n  )\n\n    return listitems;\n  }\n\n  navClick(ind,e){\n    this.props.navClick(ind)\n  }\n\n  componentDidUpdate(prevProps) {\n  // Typical usage (don't forget to compare props):\n    if (this.props.selectFile !== prevProps.selectFile) {\n      this.getFeatures()\n    }\n  }\n\n\n  render() {\n    return (\n      <Navbar className=\"features_navbar\" bg=\"light\" expand=\"lg\">\n        <Navbar.Brand href=\"#home\">Features</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Form inline>\n            <Form.Control as=\"select\"  onChange={this.selectFeature.bind(this)}>\n           {this.props.features.length>0? this.getFeatures() : <option>No files</option>}\n           </Form.Control>\n          </Form>\n          {\n          //   <Nav.Link href=\"#classes\" onClick = {this.navClick.bind(this,0)}>Data Classes</Nav.Link>\n          // <Nav.Link href=\"#normaldistribution\" onClick = {this.navClick.bind(this,1)}>Feature Distribution</Nav.Link>\n        }\n          <Nav.Link href=\"#boxplot\" onClick = {this.navClick.bind(this,2)}>BoxPlot</Nav.Link>\n          <Nav.Link href=\"#histogram\" onClick = {this.navClick.bind(this,1)}>Key Histograms</Nav.Link>\n          <Nav.Link href=\"#plotly\" onClick = {this.navClick.bind(this,3)}>Plotly Graph</Nav.Link>\n        </Navbar.Collapse>\n      </Navbar>\n    );\n  }\n\n}\n\nexport default NavBar;\n","import React from 'react';\nimport Chart from 'chart.js';\nimport {Navbar,Form,NavDropdown,Nav,FormControl,Button} from 'react-bootstrap';\n\n\nclass ViewClasses extends React.Component {\n\n  constructor(props) {\n      super(props);\n      this.state = {\n        chinese: 0,\n        malay: 0,\n        hindi: 0,\n        tamil: 0\n      }\n  }\n\n  componentDidMount() {\n    let obj = this.props.data;\n    let chinese = Object.keys(obj).map((a) => { return(obj[a].class==0);}).filter(Boolean).length;\n    let malay = Object.keys(obj).map((a) => { return(obj[a].class==1);}).filter(Boolean).length;\n    let hindi = Object.keys(obj).map((a) => { return(obj[a].class==2);}).filter(Boolean).length;\n    let tamil = Object.keys(obj).map((a) => { return(obj[a].class==3);}).filter(Boolean).length;\n    let vals ={\n      'chinese': chinese,\n      'malay':malay,\n      'hindi':hindi,\n      'tamil':tamil\n    }\n    this.drawGraph(vals)\n  }\n\n  drawGraph(vals) {\n      var ctx = document.getElementById('myChart');\n      var myChart = new Chart(ctx, {\n          type: 'bar',\n          devicePixelRatio:1,\n          data: {\n              labels: ['Chinese','Malay','Hindi','Tamil'],\n              datasets: [{\n                  label: '# of dataset',\n                  data: [vals.chinese, vals.malay, vals.hindi, vals.tamil],\n                  backgroundColor: [\n                      'rgba(255, 99, 132, 0.2)',\n                      'rgba(54, 162, 235, 0.2)',\n                      'rgba(255, 206, 86, 0.2)',\n                      'rgba(75, 192, 192, 0.2)',\n                      'rgba(153, 102, 255, 0.2)',\n                      'rgba(255, 159, 64, 0.2)'\n                  ],\n                  borderColor: [\n                      'rgba(255, 99, 132, 1)',\n                      'rgba(54, 162, 235, 1)',\n                      'rgba(255, 206, 86, 1)',\n                      'rgba(75, 192, 192, 1)',\n                      'rgba(153, 102, 255, 1)',\n                      'rgba(255, 159, 64, 1)'\n                  ],\n                  borderWidth: 1\n              }]\n          },\n          options: {\n              responsive: false,\n              title: {\n                display: true,\n                text: 'Dataset'\n            },\n              scales: {\n                  yAxes: [{\n                      ticks: {\n                          beginAtZero: true\n                      }\n                  }]\n              }\n          }\n      });\n  }\n\n\n  render() {\n    return (\n      <div className='visualizer'>\n          <canvas id=\"myChart\" width=\"400\" height=\"400\"></canvas>\n      </div>\n    );\n  }\n\n}\n\nexport default ViewClasses;\n","import React from 'react';\nimport {Navbar,Form,NavDropdown,Nav,FormControl,Button} from 'react-bootstrap';\nimport Chart from 'chart.js';\n\nclass ViewFeatureNormalDist extends React.Component {\n\n  constructor(props) {\n      super(props);\n      this.state = {\n        data:[],\n        featureName:'',\n        myLineChart:{},\n        pdf:[],\n        pdfdata:[]\n      }\n  }\n\n  showChart(){\n    this.processData().then((res) =>{\n      this.updateStateForPdf(res).then((res) =>{\n        this.drawGraph()\n      })\n\n    })\n  }\n\n  componentDidMount() {\n      this.showChart()\n\n  }\n\n  updateStateForPdf(res){\n    return new Promise((resolve,reject) => {\n      this.setState({\n        pdfdata:res\n      })\n      resolve('success')\n    })\n\n  }\n\n  processData(){\n    return new Promise((resolve,reject) => {\n      let mu = this.getMean()\n      let std = this.getStd(mu)\n      let pdf = this.getPdf(mu,std)\n      if(pdf.length>0){\n        let arr = []\n        for (let i=0; i<pdf.length; i++){\n          let obj ={\n            x: this.props.linedata[i],\n            y: pdf[i]\n          }\n          arr.push(obj)\n        }\n\n        this.setState({\n          mu,\n          std\n        })\n        resolve(arr)\n      } else{\n        reject('Promise rejected')\n      }\n    })\n  }\n\n  getPdf(mu,std){\n    let pdf = []\n    for (let i =0; i<this.props.linedata.length; i++){\n      let exp = (-1/2)*Math.pow(((this.props.linedata[i]-mu)/std),2)\n      let numerator = Math.exp(exp)\n      let denominator = std*Math.sqrt(2*Math.PI)\n      let prob = numerator/denominator\n      pdf.push(prob)\n    }\n    return pdf\n  }\n\n  getStd(mu){\n    console.log('getting std');\n    let N = this.props.linedata.length;\n    let sum = 0;\n    for (let i =0; i<this.props.linedata.length; i++){\n      let diff = (this.props.linedata[i]-mu)*(this.props.linedata[i]-mu)\n      sum+=diff\n    }\n    sum = sum/N\n    let std = Math.sqrt(sum)\n    return std\n  }\n\n  getMean(){\n    console.log('getting mean');\n    let sum = 0\n    for (let i =0; i<this.props.linedata.length; i++){\n      sum+=this.props.linedata[i]\n    }\n    let mean = sum/this.props.linedata.length\n    return mean\n  }\n\n\n\n  drawGraph() {\n    console.log('logging resultss');\n    console.log(Math.min.apply(this.props.linedata));\n    console.log(this.props.linedata);\n      let linedata = this.props.linedata.sort()\n      let maxval = linedata[linedata.length-1]\n      let minval = linedata[0]\n      var ctx = document.getElementById('myChart');\n      let promise = new Promise((resolve,reject)=> {\n        var myLineChart = new Chart(ctx, {\n            type: 'line',\n\n            data: {\n              // labels: [Math.min.apply(this.props.linedata),0,Math.max.apply(this.props.linedata)],\n              labels:[-1*(this.state.mu-this.state.std),'mu',1*(this.state.mu+this.state.std)],\n              datasets: [{\n                data: this.state.pdfdata,\n                borderColor: \"#3e95cd\",\n                borderWidth:2,\n                fill: false,\n              },\n\n\n\n            ]\n            },\n            options: {\n                responsive: false,\n                hover: true,\n                legend: {\n                labels: {\n                            // This more specific font property overrides the global property\n                            fontColor: 'black'\n                        }\n                    },\n                title: {\n                  display: true,\n                  text: this.props.featureName\n              },\n                scales: {\n                    yAxes: [{\n                        display:true,\n                        fontSize:14,\n                        fontColor:'black',\n                        stacked: true,\n                        labelString: 'probability'\n                    }]\n                }\n            }\n\n        });\n\n        resolve(myLineChart)\n      })\n\n      promise.then((res)=>{\n        this.setState({\n          myLineChart:res\n        })\n      })\n\n  }\n\n  componentDidUpdate(prevProps) {\n    console.log(\"Updating\");\n  // Typical usage (don't forget to compare props):\n  if (this.props.featureInd !== prevProps.featureInd) {\n    if(Object.keys(this.state.myLineChart).length==0){\n      this.showChart()\n    } else{\n      let myLineChart = this.state.myLineChart\n      // myLineChart.data.datasets[1].data = this.props.linedata\n      myLineChart.options.title.text = this.props.featureName\n\n      this.processData().then((res) =>{\n        console.log('process ===========data ');\n\n        myLineChart.data.labels = [-1*(this.state.mu-this.state.std),'mu',1*(this.state.mu+this.state.std)]\n        // [Math.min.apply(this.props.linedata),0,Math.max.apply(this.props.linedata)]\n        myLineChart.data.datasets[0].data = res\n        myLineChart.update()\n        this.setState({\n          myLineChart\n        })\n\n      })\n    }\n\n    // console.log(myLineChart.data.dataset);\n\n  }\n}\n\n\n  render() {\n    console.log(this.props);\n    return (\n      <div className='visualizer'>\n          <canvas id=\"myChart\" width=\"700\" height=\"500\"></canvas>\n      </div>\n    );\n  }\n\n}\n\nexport default ViewFeatureNormalDist;\n","\nimport React from 'react';\nimport {Navbar,Form,NavDropdown,Nav,FormControl,Button} from 'react-bootstrap';\nimport * as d3 from 'd3';\n\nclass ViewScatterPlot extends React.Component {\n\n  constructor(props) {\n      super(props);\n\n  }\n\n  onMouseOver(d,i) {\n\n  }\n\n  formHistogram(data,maximum) {\n    // console.log(data.classA.values);\n      let ind = 0;\n      let width = 900;\n      let height = maximum/10;\n      let scaleHeight = 30;\n      let scaleWidth = width/4;\n      let classes = ['Chinese','Malay','Hindi','Tamil'];\n      let cssClass = ['bar-a','bar-b','bar-c','bar-d'];\n      let svg = d3.select('.scatter-visualizer')\n                .append('svg')\n                .attr('class','svg-css')\n                .attr('width',width)\n                .attr('height',height +100)\n      let startX = 0;\n      let endX = width/4;\n      let labelScale = (width/3)/2-40;\n\n      let yScale = d3.scaleLinear()\n                  .domain([0, maximum])\n                  .range([height,0]);\n\n      for(let key in data){\n          let group = data[key]\n          let arr = Object.values(group);\n          // console.log(height);\n\n          svg.append('text')\n             .attr('transform',`translate(${labelScale},${height+65})`)\n             .text(classes[ind]);\n\n          let g = svg.append('g');\n\n\n\n\n          let xScale = d3.scaleBand()\n                      .domain([...Object.keys(group)])\n                      .range([startX,endX])\n                      .padding(0.2);\n\n          let xAxis = d3.axisBottom(xScale);\n\n          let yAxis = d3.axisLeft(yScale);\n\n          let keys = Object.keys(group);\n\n           g.selectAll('g')\n            .data(Object.values(group))\n            .enter()\n            .append('g')\n            .append('rect')\n            .attr('transform',`translate(50,${scaleHeight})`)\n            .attr('class',cssClass[ind])\n            .attr('width',xScale.bandwidth())\n            .attr('x',function(d,i){ return xScale(keys[i]);})\n            .attr('y' ,function(d){return yScale(d);})\n            .attr('height',function(d){ return height - yScale(d);})\n            .on('mouseover',function(d,i){\n              let el = this.nextElementSibling;\n\n              d3.select(this)\n              .classed('selected-bar',true);\n\n              d3.select(el)\n              .classed('selected-text',true);\n\n            })\n            .on('mouseout', function(d,i){\n              // console.log(this.nextElementSibling);\n              let el = this.nextElementSibling;\n              d3.select(this)\n              .classed('selected-bar',false)\n              // .classed(cssClass[ind],true);\n              d3.select(el)\n              .classed('selected-text',false);\n            })\n\n\n            g.selectAll('g')\n            .data(Object.values(group))\n            .append('text')\n            .attr('class', 'data-text')\n            .attr('transform',`translate(50,${scaleHeight-10})`)\n            .attr('y' ,function(d){return yScale(d);})\n            .attr('x',function(d,i){ ;return xScale(keys[i]);})\n            .text(function (d,i) { return d; })\n\n            g.append('g')\n               .attr('transform',`translate(50,${height + scaleHeight})`)\n               .call(xAxis);\n\n            if(ind==0){\n              g.append('g')\n                 .attr('transform',`translate(50,${scaleHeight})`)\n                 .call(yAxis);\n            }\n\n            ind+=1;\n            startX+=scaleWidth;\n            endX+=scaleWidth;\n            labelScale+=scaleWidth;\n\n      }\n\n\n  }\n\n  organizeData(){\n    let features = this.props.features;\n    let classA = {};\n    let classB = {};\n    let classC = {};\n    let classD = {};\n    let maximum = 0;\n    features.forEach(feature => {\n      // split feature name to get the key name\n      let name = feature.split('_').pop()\n      if(name !='strength'){\n        classA[name] = this.props.data[0].value[feature].filter(s => s==1).length;\n        classB[name] = this.props.data[1].value[feature].filter(s => s==1).length;\n        classC[name] = this.props.data[2].value[feature].filter(s => s==1).length;\n        classD[name] = this.props.data[3].value[feature].filter(s => s==1).length;\n        // console.log([classA[name], classB[name], classC[name], classD[name] ]);\n        // console.log(d3.max([classA[name], classB[name], classC[name], classD[name] ]));\n        if(maximum < d3.max([classA[name], classB[name], classC[name], classD[name] ])){\n\n          maximum = d3.max([classA[name], classB[name], classC[name], classD[name] ]);\n        }\n      }\n    })\n\n    let data = {classA, classB, classC, classD};\n\n    this.formHistogram(data,maximum);\n\n\n  }\n\n  componentDidMount(){\n    // this.organizeData()\n  }\n\n  componentDidUpdate(prevProps) {\n  // Typical usage (don't forget to compare props):\n\n    if (this.props !== prevProps) {\n      d3.selectAll(\"svg\").remove();\n      this.organizeData()\n    }\n  }\nrender() {\n\n  console.log(this.props);\n  return (\n    <div className='scatter-visualizer'>\n      <h1>Histogram of keys</h1>\n    </div>\n  );\n}\n\n}\n\n\nexport default ViewScatterPlot;\n","import React from 'react';\nimport {Row,Col,Button} from 'react-bootstrap';\nimport * as d3 from 'd3';\nimport { Icon } from 'react-fa';\n\nclass BoxPlotView extends React.Component {\n  constructor(props) {\n      super(props);\n      this.state = {\n        data : {}\n      }\n  }\n\n\n  featureheightRange(){\n    let arr = []\n    Object.keys(this.props.data).forEach((ind)=>{\n      // console.log(this.props.data[ind]['value'][this.props.featureName].length);\n      arr = arr.concat(this.props.data[ind]['value'][this.props.featureName].map(Number))\n    })\n\n    let max = d3.max(arr)\n    let min = d3.min(arr)\n    return [min,max]\n  }\n\n  getData(){\n    return new Promise((resolve,reject) =>{\n      let obj = [];\n      let lowest = 1000;\n      let highest = 0;\n\n      Object.keys(this.props.data).forEach((ind)=>{\n        // console.log(this.props.data[ind]);\n        let tmpObj = {\n          value:{}\n        }\n        console.log('index:',ind);\n        // let key = 'chinese'\n        if(ind ==0){\n          tmpObj['key'] ='chinese'\n\n        } else if(ind == 1){\n          tmpObj['key'] ='malay'\n        } else if(ind == 2){\n          tmpObj['key'] ='hindi'\n        } else{\n          tmpObj['key'] ='tamil'\n        }\n\n        let q1 = d3.quantile(this.props.data[ind]['value'][this.props.featureName].map(Number).sort(d3.ascending),.25)\n        let median = d3.quantile(this.props.data[ind]['value'][this.props.featureName].map(Number).sort(d3.ascending),.5)\n        let q3 = d3.quantile(this.props.data[ind]['value'][this.props.featureName].map(Number).sort(d3.ascending),.75)\n        let interQuantileRange = q3 - q1\n        let min = q1 - (1.5 * interQuantileRange)\n        let max = q3 + (1.5 * interQuantileRange)\n        if(min<lowest){\n          lowest = min;\n        }\n        if(max>highest){\n          highest = max;\n        }\n        tmpObj['value']={\n          min,\n          max,\n          q1,\n          q3,\n          median,\n          interQuantileRange\n        }\n        obj.push(tmpObj)\n\n        // arr = arr.concat(this.props.data[ind]['value'][this.props.featureName].map(Number))\n      })\n\n\n      resolve({obj,lowest,highest});\n    })\n\n    // return obj\n  }\n\n  organizeData(){\n    d3.selectAll(\"g > *\").remove()\n    var margin = {top: 10, right: 30, bottom: 30, left: 40},\n    width = 900 - margin.left - margin.right,\n    height = 650 - margin.top - margin.bottom;\n    let featureheightRange = this.featureheightRange()\n    console.log(featureheightRange);\n    var svg = d3.select(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n    .append(\"g\")\n    .attr(\"transform\",\n            \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n    this.getData().then((res) =>{\n    // let data = res.data\n\n    let data = res.obj;\n    let lowest = res.lowest;\n    let highest = res.highest;\n//Show the x scale\n    var x = d3.scaleBand()\n      .range([ 0, width ])\n      .domain([\"chinese\", \"malay\", \"hindi\",\"tamil\"])\n      .paddingInner(1)\n      .paddingOuter(.5)\n    svg.append(\"g\")\n    .attr(\"transform\", \"translate(0,\" +height + \")\")\n      // .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(d3.axisBottom(x))\n\n      // Show the Y scale\n    var y = d3.scaleLinear()\n      .domain([lowest,highest])\n      .range([height,lowest])\n    svg.append(\"g\").call(d3.axisLeft(y))\n\n\n    // Show the main vertical line\n\n\n    console.log(data);\n    Object.keys(data).forEach((i) => {\n      console.log(data[i]);\n      svg.data([data[i]])\n      .append(\"line\")\n      .attr(\"x1\", function(d){return(x(d.key))})\n      .attr(\"x2\", function(d){return(x(d.key))})\n      .attr(\"y1\", function(d){return(y(d.value.min))})\n      .attr(\"y2\", function(d){return(y(d.value.max))})\n        .attr(\"stroke\", \"black\")\n        .style(\"width\", 40)\n    });\n\n\n    var boxWidth = 50\n    //show the min and max line\n    Object.keys(data).forEach((i) => {\n      svg\n        .data([data[i]])\n        .append(\"line\")\n          .attr(\"x1\", function(d){\n            return(x(d.key)-boxWidth/2)\n          })\n          .attr(\"x2\", function(d){return(x(d.key)+boxWidth/2) })\n          .attr(\"y1\", function(d){return(y(d.value.max))})\n          .attr(\"y2\", function(d){return(y(d.value.max))})\n          .attr(\"stroke\", \"black\")\n          .style(\"width\", 80)\n        })\n\n    Object.keys(data).forEach((i) => {\n      svg\n        .data([data[i]])\n        .append(\"line\")\n          .attr(\"x1\", function(d){return(x(d.key)-boxWidth/2) })\n          .attr(\"x2\", function(d){return(x(d.key)+boxWidth/2) })\n          .attr(\"y1\", function(d){return(y(d.value.min))})\n          .attr(\"y2\", function(d){return(y(d.value.min))})\n          .attr(\"stroke\", \"black\")\n          .style(\"width\", 80)\n            })\n    //show the min and max line\n\n\n    // rectangle for the main box\n\n  Object.keys(data).forEach((i) => {\n      svg\n    .data([data[i]])\n    .append(\"rect\")\n        .attr(\"x\", function(d){return(x(d.key)-boxWidth/2)})\n        .attr(\"y\", function(d){ return(y(d.value.q3))})\n        .attr(\"height\", function(d){return(Math.abs(y(d.value.q3)-y(d.value.q1)))})\n        .attr(\"width\", boxWidth )\n        .attr(\"stroke\", \"black\")\n        .style(\"fill\", \"#1685e7\")\n      })\n      // Show the median\n    Object.keys(data).forEach((i) => {\n      svg\n        .data([data[i]])\n        .append(\"line\")\n          .attr(\"x1\", function(d){return(x(d.key)-boxWidth/2) })\n          .attr(\"x2\", function(d){return(x(d.key)+boxWidth/2) })\n          .attr(\"y1\", function(d){return(y(d.value.median))})\n          .attr(\"y2\", function(d){return(y(d.value.median))})\n          .attr(\"stroke\", \"red\")\n          .style(\"width\", 80)\n        })\n\n        // Add individual points with jitter\n        var jitterWidth = 50\n\nconsole.log(this.props.data);\n  // svg\n  // .data(this.props.data)\n  // .append(\"circle\")\n  //   .attr(\"cx\", function(d){return(x(d.Class) - jitterWidth/2 + Math.random()*jitterWidth )})\n  //   .attr(\"cy\", function(d){return(y(d[this.props.featureName]))})\n  //   .attr(\"r\", 4)\n  //   .style(\"fill\", \"white\")\n  //   .attr(\"stroke\", \"black\")\n})\n  }\n\n  componentDidMount(){\n    // console.log(this.props.data);\n    // let arr = [1,1,2,2,3,3,4,4,6,7,8,10,11,14,15,20,22]\n    // console.log(d3.quantile(arr,.5));\n    if(this.props.featureName!=''){\n      this.organizeData()\n    }\n\n  }\n\n  componentDidUpdate(prevProps) {\n  // Typical usage (don't forget to compare props):\n    if (this.props.featureName !== prevProps.featureName) {\n      this.organizeData()\n    }\n  }\n\n  render() {\n\n\n    return (\n      <div className={this.props.loading?'spinner-container':'box_plot_container'}>\n        {this.props.loading ? <p><Icon className=\"cog_spinner\" spin name='cog' /></p> :  <svg></svg>}\n      </div>\n    );\n  }\n\n}\n\nexport default BoxPlotView;\n","\nimport React from 'react'\nimport Plot from 'react-plotly.js';\nimport { Container,Button,Row,Col,Form} from 'react-bootstrap';\nimport * as d3 from 'd3';\n\nclass PlotlyTest extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          x : [],\n          y: [],\n          z:[],\n          classs:[],\n          colors:[],\n          selectClass:{\n            chinese : true,\n            malay: true,\n            hindi: true,\n            tamil: true,\n            ndp: true,\n          }\n          \n        }\n\n    }\n    componentDidMount() {\n      //remove this when done with boxplot\n        console.log(this.props)\n    }\n\n    organizeData(){\n      \n      return new Promise ((resolve, reject) =>{\n        let selections = this.props.selectClass\n        let selectedInd = []\n        Object.keys(selections).forEach((key,ind)=>{\n          if(selections[key]){\n            selectedInd.push(ind)\n          }\n        })\n       \n        let data = this.props.data.filter((dat,i) =>{\n          if(selectedInd.indexOf(i) > -1){\n            return dat\n          }\n        })\n        \n        console.log(data[Object.keys(data)[0,1,2,3]])\n        let x = []\n        let y = []\n        let z = []\n        let classs = []\n        let colors = []\n        Object.keys(data).forEach((ind) => {\n          console.log(data[ind]);\n          x = x.concat(data[ind]['value']['x']);\n          y = y.concat(data[ind]['value']['y'])\n          z = z.concat(data[ind]['value']['z'])\n          classs =  classs.concat(data[ind]['value']['className'])\n          colors =  colors.concat(data[ind]['value']['color'])\n        })\n        let obj = {\n          x,y,z,classs,colors\n        }\n        \n        resolve(obj)\n      })\n      \n      \n      \n    }\n\n   \n    \n    componentDidUpdate(prevProps) {\n        console.log(this.props)\n      // Typical usage (don't forget to compare props):\n       \n        if (this.props !== prevProps ) {\n          this.organizeData().then((res) => {\n            console.log(res['x'])\n            this.setState({\n              x: res['x'],\n              y: res['y'],\n              z: res['z'],\n              classs: res['classs'],\n              colors: res['colors']\n            })\n          })\n        }\n      }\n\n    onClickPoint(e){\n      \n      console.log(e)\n    }\n\n    selectBox(e){\n      let val = e.target.value\n      console.log(e.target.checked)\n      this.props.updateClassSelection(val,e.target.checked)\n    }\n\n    render() {\n\n\n        return (\n          <Row>\n          <Col md={6}>\n            <Plot\n            onClick=  {this.onClickPoint.bind(this)}\n            data={[{\n              x: this.state.x,\n              y: this.state.y,\n              z: this.state.z,\n              text:this.state.classs,\n              mode: 'markers',\n              type: 'scatter3d',\n              marker: {\n                color: this.state.colors,\n                size: 2\n              }\n          },\n\n                  ]}\n\n            layout={ {width: 800, height: 800, title: 'TSNE Visualization for 98 low-level features',hovermode:'closest'} }\n          />\n          </Col>\n          <Col md={5} className='selectBox-wrapper'>\n          <Form id='checkbox-form' onChange = {this.selectBox.bind(this)}>\n            \n            <Form.Group className='checkbox-class' id=\"chinese\"  >\n              <Form.Check type=\"checkbox\" label=\"Chinese\" value='chinese' checked={this.props.selectClass['chinese']}  />\n              <div className='c'></div>\n              \n            </Form.Group>\n            <Form.Group className='checkbox-class' id=\"malay\">\n              <Form.Check type=\"checkbox\" label=\"Malay\" value='malay' checked={this.props.selectClass['malay']} />\n              <div className='m'></div>\n            </Form.Group>\n            <Form.Group className='checkbox-class' id=\"hindi\">\n              <Form.Check type=\"checkbox\" label=\"Hindi\" value='hindi'  checked={this.props.selectClass['hindi']} />\n              <div className='h'></div>\n            </Form.Group>\n            <Form.Group className='checkbox-class' id=\"Tamil\">\n              <Form.Check type=\"checkbox\" label=\"Tamil\" value='tamil' checked={this.props.selectClass['tamil']} />\n              <div className='t'></div>\n            </Form.Group>\n            <Form.Group className='checkbox-class' id=\"ndp\">\n              <Form.Check type=\"checkbox\" label=\"NDP Songs\" value='ndp' checked={this.props.selectClass['ndp']} />\n              <div className='n'></div>\n            </Form.Group>\n          </Form>\n\n          </Col>\n\n          </Row>\n        );\n      }\n}\n\nexport default PlotlyTest;\n","import React from 'react'\nimport ReactPlayer from 'react-player';\nimport { Row, Col, Form} from 'react-bootstrap';\nimport {Icon} from 'react-fa';\n\nexport default class CustomAudioPlayer extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        playing: false,\n        duration: 0,\n        progress: 0,\n        start: 0\n      };\n    }\n  \n    togglePlaying() {\n      this.setState({\n        playing: !this.state.playing\n      });\n    }\n  \n    updateProgress(progressData, duration) {\n      const { playedSeconds } = progressData;\n      if(duration) {\n        const progress = (playedSeconds/duration) * 100;\n  \n        this.setState({progress});\n      }\n    }\n  \n    onChangeProgress(e) {\n      const progress = e.target.value;\n      const start = this.state.duration / 100 * progress;\n      this.setState({\n        progress,\n        start,\n        playing: true\n      });\n    }\n  \n    render() {\n      const { progress, duration, start, playing } = this.state;\n      const { ytid, title } = this.props;\n      const activeIcon = playing ? 'pause-circle' : 'play-circle';\n      return <div className=\"custom_audio_player\">\n        <div className=\"ytb\">\n          <ReactPlayer \n            onProgress={(progressData) => { this.updateProgress(progressData, duration); }} \n            onDuration={(duration) => { this.setState({duration}); }} \n            url={'https://youtu.be/'+ytid+'?t='+start}\n            playing={playing} \n            controls={true}\n          config={{\n            file:'forceAudio'\n          }}\n          />\n        </div>\n        <div className=\"controls\">\n          <Row>\n            <Col className=\"title\" xs={12}>\n                {title}\n            </Col>\n            <Col xs={2}>\n              <Icon onClick={this.togglePlaying.bind(this)} name={activeIcon}/>\n            </Col>\n            <Col xs={10}>\n              <Form.Control onChange={this.onChangeProgress.bind(this)} type=\"range\" value={progress} />\n            </Col>\n          </Row>\n        </div>\n      </div>;\n    }\n  }","\nimport React from 'react'\nimport Plot from 'react-plotly.js';\nimport { Container,Button,Row,Col,Form} from 'react-bootstrap';\nimport * as d3 from 'd3';\nimport CustomAudioPlayer from './CustomAudioPlayer';\n\n\nclass Ethnicity {\n  constructor(x,y,text,name,color,fillColor) {\n    this.y = y;\n    this.x = x;\n    this.mode = 'markers';\n    this.name = name;\n    this.text = text;\n    this.type = 'scatter';\n    this.fill = 'tozeroy';\n    // this.fill = 'tonexty';\n    this.hoveron =  'points+fills';\n    this.fillcolor = fillColor;\n    // this.opacity = 0.2;\n\n    this.marker = {\n      color: Array(24).fill(color),\n      size: 10,\n      opacity:0.9,\n                line: {\n                  color: '#c9c9c9',\n                  width: 2\n                }\n    }\n\n  }\n}\n\nclass SongTrend extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n         names:[],\n         y:[],\n         x:[],\n         colors:[],\n         ytId: [],\n         data:[],\n         selectedSong:'',\n         selectedSongName:''\n\n        }\n\n    }\n    componentDidMount() {\n      //remove this when done with boxplot\n        console.log('NDP')\n        console.log(this.props)\n    }\n\n    organizeData(){\n      // chinese = #F24443\n      //malay = #11ED2E\n      // hindi = #0F12EA\n      // tamil = #DA43E5\n\n      let name = []\n      let y = []\n      let x = []\n\n      let names = []\n      let ytId = []\n      let chinese = {}\n      let malay = {}\n      let hindi = {}\n      let tamil = {}\n      let data = this.props.data[0]['value']\n      console.log(data)\n      for( let i in data['Link']){\n        ytId.push(data['Link'][i].split('=')[1])\n      }\n\n      chinese = new Ethnicity(data['Year'],data['Chinese'],data['Song Name'],'Chinese','#F24443','rgba(242, 68, 67, 0.7)')\n      malay = new Ethnicity(data['Year'],data['Malay'],data['Song Name'],'Malay','#11ED2E','rgba(17, 237, 46, 0.7)')\n      hindi = new Ethnicity(data['Year'],data['Hindi'],data['Song Name'],'Hindi','#0F12EA','rgba(15, 18, 234, 0.7)')\n      tamil = new Ethnicity(data['Year'],data['Tamil'],data['Song Name'],'Tamil','#DA43E5','rgba(218, 67, 229, 0.7)')\n\n\n\n\n      // data['Link'].forEach(element => {\n      //   console(element)\n      // });\n      console.log('PRinting the linkkk')\n      console.log(data['Link'])\n\n\n\n      this.setState({\n        data:[hindi,chinese,tamil,malay],\n        names: data['Song Name'],\n        ytId,\n\n      })\n\n\n    }\n\n\n\n    componentDidUpdate(prevProps) {\n       if(prevProps!=this.props){\n\n         this.organizeData()\n       }\n      }\n\n    onClickPoint(e){\n      let colors = this.state.colors\n      console.log(e.points[0])\n\n      let index = e.points[0].pointIndex % 24\n      // console.log(this.state.ytId[index])\n      // // console.log(this.state.names[index])\n      this.setState({\n        selectedSong: this.state.ytId[index],\n        selectedSongName:this.state.names[index],\n        colors\n      })\n\n    }\n\n\n\n    render() {\n\n\n        return (\n          <Row>\n\n            <Col md={12}>\n\n         {\n\n\n            <Plot\n            onClick=  {this.onClickPoint.bind(this)}\n\n            data={this.state.data}\n\n            layout={ { height:500,width: 900, title: 'NDP songs trend from 1984 to 2020',hovermode:'closest'} }\n          />\n          }\n\n          </Col>\n          <Col md={1}></Col>\n          <Col md={4}>\n           <CustomAudioPlayer ytid={this.state.selectedSong} title={this.state.selectedSongName}/>\n\n\n          </Col>\n\n          </Row>\n        );\n      }\n}\n\nexport default SongTrend;\n","\nimport React from 'react'\nimport Plot from 'react-plotly.js';\nimport { Container,Button,Row,Col,Form} from 'react-bootstrap';\nimport * as d3 from 'd3';\nimport CustomAudioPlayer from './CustomAudioPlayer';\nimport { Icon } from 'react-fa';\n\n\nclass Ethnicity {\n  constructor(x,y,text,color,fillColor,size,name,mode) {\n    this.y = y;\n    this.x = x;\n    this.mode = mode;\n    this.name = name;\n    this.text = text;\n    this.type = 'scatter';\n    this.hoveron =  'points';\n    this.fillcolor = fillColor;\n    this.textposition = 'bottom';\n    this.textfont = {\n        size:18,\n        family: 'Open Sans'\n    }\n    this.marker = {\n      color: fillColor,\n      size: size,\n      sizemode: 'area',\n        sizeref: 200000,\n      opacity:0.75,\n                line: {\n                  color: color,\n                  width: 2\n                }\n    }\n\n  }\n}\n\nclass TsneTrend extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n         names:[],\n         y:[],\n         x:[],\n         colors:[],\n         ytId: [],\n         data:[],\n         selectedSong:'',\n         selectedSongName:'',\n         sliderSteps:{},\n         frames:[],\n         loading:true\n\n        }\n\n    }\n    componentDidMount() {\n      //remove this when done with boxplot\n\n    }\n\n    organizeData(){\n      return new Promise ((resolve, reject) => {\n\n// test\n      let name = []\n      let y = []\n      let x = []\n\n      let names = []\n\n      let chinese = {}\n      let malay = {}\n      let hindi = {}\n      let tamil = {}\n      let sgSongs = {}\n      let data = this.props.data\n\n      chinese = new Ethnicity(data[0]['value']['x'],data[0]['value']['y'],data[0]['value']['className'],data[0]['value']['color'],data[0]['value']['color'],2,'Chinese','markers')\n      malay = new Ethnicity(data[1]['value']['x'],data[1]['value']['y'],data[1]['value']['className'],data[1]['value']['color'],data[1]['value']['color'],2,'Malay','markers')\n      hindi = new Ethnicity(data[2]['value']['x'],data[2]['value']['y'],data[2]['value']['className'],data[2]['value']['color'],data[2]['value']['color'],2,'Hindi','markers')\n      tamil = new Ethnicity(data[3]['value']['x'],data[3]['value']['y'],data[3]['value']['className'],data[3]['value']['color'],data[3]['value']['color'],2,'Tamil','markers')\n      sgSongs = new Ethnicity(data[4]['value']['x'],data[4]['value']['y'],data[4]['value']['Song Name'],data[4]['value']['color'],data[4]['value']['color'],10,'NDP Songs','markers')\n      let toPlot = [chinese,malay,hindi,tamil,sgSongs]\n\n      let years = data[4]['value']['Year']\n      let sliderSteps = [];\n      for (let i = 0; i < years.length; i++) {\n\n        sliderSteps.push({\n          method: 'animate',\n          label: years[i],\n          args: [[years[i]], {\n            mode: 'immediate',\n            transition: {duration: 50},\n            frame: {duration: 50, redraw: false},\n          }]\n        });\n\n      }\n\n      let ndpSongs = data[4]['value']\n      let song = {}\n      var frames = [];\n            for (let i = 0; i < years.length; i++) {\n                let dt = ndpSongs['Link'][i]\n                let song = new Ethnicity([ndpSongs['x'][i]],[ndpSongs['y'][i]],[ndpSongs['Filename'][i]],[ndpSongs['color'][i]],[ndpSongs['color'][i]],15,'NDP Songs','markers+text')\n                // let song = new Ethnicity(ndpSongs['x'].slice(0,i+1),ndpSongs['y'].slice(0,i+1),ndpSongs['Filename'][i].slice(0,i+1),ndpSongs['color'][i].slice(0,i+1),ndpSongs['color'][i].slice(0,i+1),10,'NDP Songs','markers')\n\n                frames.push({\n                name: years[i],\n                data: [chinese,malay,hindi,tamil,song]\n                })\n            }\n            resolve({\n              data:toPlot,\n                 sliderSteps,\n                 frames\n            })\n          })\n//turn this on if it doesnt work\n    //   this.setState({\n    //     data:toPlot,\n    //     sliderSteps,\n    //     frames\n    // })\n\n\n\n    }\n\n\n\n    async componentDidUpdate(prevProps) {\n       if(prevProps!=this.props){\n         let result = await this.organizeData();\n           this.setState({\n             loading:false,\n             data:result.data,\n             sliderSteps: result.sliderSteps,\n             frames: result.frames\n         })\n       }\n      }\n\n    onClickPoint(e){\n      let colors = this.state.colors\n\n      let index = e.points[0].pointIndex % 24\n      this.setState({\n        selectedSong: this.state.ytId[index],\n        selectedSongName:this.state.names[index],\n        colors\n      })\n\n    }\n\n\n\n    render() {\n\n\n        return (\n          <div className={this.state.loading?'loading':''}>\n          {this.state.loading? <Icon name=\"fas fa-spinner fa-spin\" />:\n          <Row>\n            <Col md={12}>\n                {/* <div className='test'></div> */}\n\n         {\n            <Plot\n            onClick=  {this.onClickPoint.bind(this)}\n\n            data={this.state.data}\n            frames= {this.state.frames}\n            layout={\n                {\n\n                 autosize:true,\n                 height:700,\n                 width: 1200,\n                 title: 'NDP songs trend from 1984 to 2020',\n                 hovermode:'closest',\n                 updatemenus: [{\n                    x: 0,\n                    y: 0,\n                    yanchor: 'top',\n                    xanchor: 'left',\n                    showactive: false,\n                    direction: 'left',\n                    type: 'buttons',\n                    pad: {t: 50, r: 0},\n                    buttons: [{\n                      method: 'animate',\n                      args: [null, {\n                        mode: 'immediate',\n                        fromcurrent: true,\n                        transition: {duration: 300},\n                        frame: {duration: 500, redraw: false}\n                      }],\n                      label: 'Play'\n                    }, {\n                      method: 'animate',\n                      args: [[null], {\n                        mode: 'immediate',\n                        transition: {duration: 0},\n                        frame: {duration: 0, redraw: false}\n                      }],\n                      label: 'Pause'\n                    }]\n                  }],\n                 sliders: [{\n                    pad: {l: 0, t: 55},\n                    currentvalue: {\n                      visible: true,\n                      prefix: 'Year:',\n                      xanchor: 'right',\n                      font: {size: 20, color: '#666'}\n                    },\n                    steps: this.state.sliderSteps\n                  }]\n                }\n            }\n          />\n          }\n\n          </Col>\n\n          <Col md={1}></Col>\n          </Row>\n        }\n          </div>\n        );\n      }\n}\n\nexport default TsneTrend;\n","import React from 'react';\nimport './App.css';\nimport ReactDOM from 'react-dom';\nimport { Container,Button,Row,Col,Nav} from 'react-bootstrap';\nimport Navbar from './widgets/Navbar';\nimport ViewClasses from './widgets/ViewClasses';\nimport ViewFeatureNormalDist from './widgets/ViewFeatureNormalDist';\nimport ViewScatterPlot from './widgets/ViewScatterPlot';\nimport BoxPlotView from './widgets/BoxPlotView';\nimport PlotlyTest from './widgets/PlotlyTest';\nimport SongTrend from './widgets/SongTrend';\nimport TsneTrend from './widgets/TsneTrend';\nimport { Icon } from 'react-fa';\nimport * as d3 from 'd3';\nconst twodtsne = require('./assets/datafiles/two-dtsne.csv');\nconst tsneData = require('./assets/datafiles/tsne-three-dim.csv');\nconst ndpSongs = require('./assets/datafiles/ndp_predictions.csv');\nconst compiledHighlevel = require('./assets/datafiles/highlevel/compiled-highlevel2.csv');\nconst compiledLowlevelNormalized = require('./assets/datafiles/lowlevel/low-level-normalized.csv');\n// const compiledLowLevel = 'https://firebasestorage.googleapis.com/v0/b/feature-visualizer.appspot.com/o/lowlevel-combined-withoutStats.csv?alt=media&token=8b16a1db-dc51-4641-988d-5635398011f3'\n\nconst compiledLowLevel = require('./assets/datafiles/lowlevel/lowlevel-combined-withoutStats.csv');\nconst compiledHighLevelNormalized = require('./assets/datafiles/highlevel/high-level2-normalized.csv');\n\n\nclass App extends React.Component {\n\n  constructor(props) {\n      super(props);\n      this.state = {\n            selectedInd:0,\n            data: [],\n            featureName:'',\n            loadingData:false,\n            features:[],\n            viewClasses:false,\n            viewFeatureGraph:false,\n            viewScatter:false,\n            featureInd:0,\n            linedata:[],\n            viewBoxPlot:false,\n            files: ['compiledLowlevelNormalized','compiledLowLevel','compiledHighlevel','tsneData','ndpSongs'],\n            selectFile:null,\n            loading:true,\n            viewPlotly:false,\n            viewTrends: false,\n            viewTsneTrend:false,\n            selectClass:{\n              chinese : true,\n              malay: true,\n              hindi: true,\n              tamil: true,\n              ndp: true,\n            }\n\n\n        };\n\n  }\n\n  componentDidMount() {\n    //remove this when done with boxplot\n      this.selectFile(5)\n      //for boxplot\n      // this.navClick(2)\n      //for scatter\n      this.navClick(4)\n  }\n\n  handleForce(data,fileinfo){\n    this.setState({\n      loadingData:false,\n      data:data,\n      features:Object.keys(data[0])\n    })\n  }\n\n  navClick(cat){\n    if(cat == 1){\n      this.setState({\n        viewClasses:false,\n        viewBoxPlot:false,\n        viewScatter:true,\n        viewTsneTrend:false\n      })\n    } else if(cat==2){\n      this.setState({\n        viewClasses:false,\n        viewBoxPlot:true,\n        viewScatter:false,\n        viewTsneTrend:false\n      })\n    } else if(cat==3){\n      this.setState({\n        viewClasses:false,\n        viewBoxPlot:false,\n        viewScatter:false,\n        viewTrends:false,\n        viewTsneTrend:false,\n        viewPlotly:true,\n      })\n    }\n    else if(cat==4){\n      this.setState({\n        viewClasses:false,\n        viewBoxPlot:false,\n        viewScatter:false,\n        viewPlotly:false,\n        viewTsneTrend:false,\n        viewTrends:true\n      })\n    }  else if(cat==5){\n      this.setState({\n        viewClasses:false,\n        viewBoxPlot:false,\n        viewScatter:false,\n        viewPlotly:false,\n        viewTrends:false,\n        viewTsneTrend:true\n      })\n    }\n\n  }\n\n  mapFeature(index){\n    return new Promise((resolve, reject) => {\n      // console.log(this.props.data);\n      let key = this.state.features[index];\n      let obj = this.state.data;\n      let result = Object.keys(obj).map((a) => {\n        return {\n          'class': obj[a]['class'],\n          'y':obj[a][key]\n        }\n\n      });\n      // console.log('mapfeature');\n      // console.log(result);\n      resolve(result)\n    })\n\n  }\n\n  selectFeature(index){\n    this.mapFeature(index)\n    this.mapFeature(index).then((res) => {\n      this.setState({\n        viewClasses:false,\n        viewFeatureGraph:false,\n        featureInd:index,\n        featureName: this.state.features[index],\n        linedata:res\n      })\n    })\n  }\n\n  updateClassSelection(val,checked) {\n      let selectClass = this.state.selectClass\n      selectClass[val] = checked\n      this.setState({\n        selectClass\n      })\n  }\n\n  getComponent(){\n    // return <GraphView/>\n    if(this.state.viewClasses ){\n      return <ViewClasses data={this.state.data}/>\n    } else if(this.state.viewScatter && (this.state.selectedInd == 2 || this.state.selectedInd == 3)) {\n      return <ViewScatterPlot\n      data={this.state.data}\n      features={this.state.features}\n      featureName={this.state.featureName}\n      />\n    } else if (this.state.viewBoxPlot){\n      return <BoxPlotView\n            loading = {this.state.loading}\n            data={this.state.data}\n            features={this.state.features}\n            featureName={this.state.featureName}\n      />\n    } else if(this.state.viewPlotly) {\n      return <PlotlyTest\n      updateClassSelection ={this.updateClassSelection.bind(this)}\n      data={this.state.data}\n      features={this.state.features}\n      featureName={this.state.featureName}\n      selectClass = {this.state.selectClass}\n      />\n    } else if(this.state.viewTrends) {\n      return <SongTrend\n      updateClassSelection ={this.updateClassSelection.bind(this)}\n      data={this.state.data}\n      features={this.state.features}\n      featureName={this.state.featureName}\n      selectClass = {this.state.selectClass}\n      />\n    } else if(this.state.viewTsneTrend) {\n      return <TsneTrend\n      updateClassSelection ={this.updateClassSelection.bind(this)}\n      data={this.state.data}\n      features={this.state.features}\n      featureName={this.state.featureName}\n      selectClass = {this.state.selectClass}\n      />\n    }\n    return <div>Nothing to view</div>\n  }\n\n  organizeData(file){\n    console.log(typeof(file))\n    console.log(file['default'])\n    d3.csv(file['default']).then((res)=>{\n      console.log(res);\n      let columns = res.columns;\n      var propertyNest = d3.nest()\n      .key(function(d){return d.Class})\n      .rollup(function(v){\n        let obj = {}\n        columns.forEach(el => {\n\n          obj[el] = v.map(a => a[el])\n        })\n        return obj\n       })\n      .entries(res)\n\n      let features = res.columns;\n      if(file['default'].includes('highlevel')){\n        let match = res.columns.filter(s => s.includes('key'))\n        console.log(match);\n        features = match;\n      }\n\n      this.setState({\n        features,\n        data: propertyNest,\n        loading: false\n      })\n    })\n  }\n\n  resetData(ind,file){\n    console.log(file)\n    this.organizeData(file)\n    this.setState({\n      loading:true,\n      selectedInd:ind,\n      selectedFile: this.state.files[ind]\n    })\n  }\n  selectFile(ind) {\n\n    let file = compiledLowlevelNormalized\n    if(ind>=1 && ind<=4){\n      if(ind ==1){\n        file = compiledLowLevel\n      } else if(ind == 2){\n        file = compiledHighlevel\n      } else if(ind == 3){\n        file = compiledHighLevelNormalized\n      } else if(ind == 4){\n        file = tsneData\n        this.navClick(3)\n      }\n      this.resetData(ind,file)\n    }\n     else if(ind == 5){\n      console.log('Selecting file')\n      file = ndpSongs\n      this.resetData(ind,file)\n      this.navClick(4)\n    } else if(ind == 6){\n      console.log('Selecting file')\n      file = twodtsne\n      this.resetData(ind,file)\n      this.navClick(5)\n    }\n    //if more files then conditions go here\n\n\n  }\n\n  render() {\n    return (\n      <div className='App container-fluid'>\n        <Row>\n            <Col md={2} >\n              <h3 className=\"branding\"><Icon name=\"signal\" /> Feature Visualiser</h3>\n              {\n              //   <Button className={this.state.selectedInd == 0?'btn-wrapper selectedd':'btn-wrapper' } variant=\"primary\"  onClick = {this.selectFile.bind(this,0)}>\n              //     Compiled lowlevel Normalized\n              // </Button>\n              // <Button className={this.state.selectedInd == 1?'btn-wrapper selectedd':'btn-wrapper' } variant=\"primary\"  onClick = {this.selectFile.bind(this,1)}>\n              //     Compiled lowlevel\n              // </Button>\n              // <Button className={this.state.selectedInd == 2?'btn-wrapper selectedd':'btn-wrapper' } variant=\"primary\"  onClick = {this.selectFile.bind(this,2)}>\n              //     Compiled  highlevel\n              // </Button>\n              // <Button className={this.state.selectedInd == 3?'btn-wrapper selectedd':'btn-wrapper' } variant=\"primary\"  onClick = {this.selectFile.bind(this,3)}>\n              //     Compiled  highlevel Normalized\n              // </Button>\n              }\n              <Button className={this.state.selectedInd == 4?'btn-wrapper selectedd':'btn-wrapper' } variant=\"primary\"  onClick = {this.selectFile.bind(this,4)}>\n                  TSNE 3d Plot\n              </Button>\n\n              <Button className={this.state.selectedInd == 5?'btn-wrapper selectedd':'btn-wrapper' } variant=\"primary\"  onClick = {this.selectFile.bind(this,5)}>\n                  NDP songs trend\n              </Button>\n              <Button className={this.state.selectedInd == 6?'btn-wrapper selectedd':'btn-wrapper' } variant=\"primary\"  onClick = {this.selectFile.bind(this,6)}>\n                  TSNE 2d NDP songs trend\n              </Button>\n            </Col>\n            <Col className=\"main_content\" md={10}>\n              {/* <Navbar\n                  data={this.state.data}\n                  features={this.state.features}\n                  selectFeature={this.selectFeature.bind(this)}\n                  navClick={this.navClick.bind(this)}\n                  selectFile={this.state.selectFile}\n              /> */}\n              {this.getComponent()}\n            </Col>\n        </Row>\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}